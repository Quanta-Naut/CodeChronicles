name: "cd"

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'cool' branch

jobs:
  cd:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout to branch
        uses: actions/checkout@v2  # Checkout the repository code

      - name: Setup Node.js
        uses: actions/setup-node@v2  # Use the latest setup-node version (v2)
        with:
          node-version: ${{ secrets.NODE_VERSION }}  # Use Node.js version from GitHub secrets

      - name: Install packages
        run: npm ci  # Install dependencies with clean npm cache

      - name: Calculate version
        id: calculateVersion
        run: |
          # Extract the app version from package.json using jq and sed
          APP_VERSION=$(cat package.json | jq -r ".version")
          echo "::set-output name=AppVersion::$APP_VERSION"
          echo "app version = v$APP_VERSION"

      - name: Build VSIX package
        run: npm run build -- -o custom-profiles-for-vscode.v${{ steps.calculateVersion.outputs.AppVersion }}.vsix

      - name: Publish extension package
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}  # Use VSCE_PAT from GitHub secrets
        run: npm run vsce -- publish -p $VSCE_PAT  # Publish using vsce with the token

      - uses: actions/upload-artifact@v2
        name: Upload artifact
        with:
          name: custom-profiles-for-vscode.v${{ steps.calculateVersion.outputs.AppVersion }}.vsix  # Naming the artifact based on version
          path: custom-profiles-for-vscode.v${{ steps.calculateVersion.outputs.AppVersion }}.vsix  # Path to the VSIX file to upload
